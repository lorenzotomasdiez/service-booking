// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  phone     String?
  role      UserRole @default(CLIENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  clientBookings   Booking[] @relation("ClientBookings")
  providerBookings Booking[] @relation("ProviderBookings")
  services         Service[]

  @@map("users")
}

model Service {
  id          String  @id @default(cuid())
  name        String
  description String?
  duration    Int     // minutes
  price       Decimal @db.Decimal(10, 2)
  isActive    Boolean @default(true)
  providerId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  provider User      @relation(fields: [providerId], references: [id], onDelete: Cascade)
  bookings Booking[]

  @@map("services")
}

model Booking {
  id          String        @id @default(cuid())
  clientId    String
  serviceId   String
  providerId  String
  startTime   DateTime
  endTime     DateTime
  status      BookingStatus @default(PENDING)
  totalAmount Decimal       @db.Decimal(10, 2)
  notes       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relations
  client   User    @relation("ClientBookings", fields: [clientId], references: [id], onDelete: Cascade)
  provider User    @relation("ProviderBookings", fields: [providerId], references: [id], onDelete: Cascade)
  service  Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  @@map("bookings")
}

enum UserRole {
  CLIENT
  PROVIDER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
  NO_SHOW
}