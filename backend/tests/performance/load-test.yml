# Artillery Load Testing Configuration for BarberPro
# Tests API performance under Argentina market load conditions

config:
  target: "http://localhost:3000"
  phases:
    # Ramp-up: Simulate gradual user increase (morning peak)
    - duration: 300  # 5 minutes
      arrivalRate: 5  # Start with 5 users per second
      name: "ramp-up"
    
    # Peak load: Simulate Argentina lunch time booking rush
    - duration: 600  # 10 minutes  
      arrivalRate: 25  # 25 users per second (peak)
      name: "peak-load"
    
    # Sustained load: Normal afternoon traffic
    - duration: 300  # 5 minutes
      arrivalRate: 15  # 15 users per second
      name: "sustained-load"
    
    # Stress test: Weekend booking rush
    - duration: 180  # 3 minutes
      arrivalRate: 50  # 50 users per second (stress)
      name: "stress-test"

  environments:
    development:
      target: "http://localhost:3000"
    staging:
      target: "https://staging.barberpro.com.ar"
    production:
      target: "https://api.barberpro.com.ar"

  processor: "./load-test-functions.js"
  
  # Performance thresholds for Argentina market
  ensure:
    # API response time requirements
    http.response_time.p95: 500  # 95% of requests under 500ms
    http.response_time.p99: 1000  # 99% of requests under 1 second
    
    # Error rate requirements  
    http.request_rate: 100  # At least 100 requests per second
    errors.ETIMEDOUT: 0  # No timeouts
    errors.ECONNREFUSED: 0  # No connection refused
    
    # Success rate requirements
    http.codes.200: 85  # At least 85% success rate
    http.codes.201: 10  # Creation success rate
    http.codes.4xx: 5   # Max 5% client errors
    http.codes.5xx: 1   # Max 1% server errors

  # Argentina-specific test data
  variables:
    argentina_phones:
      - "+5491123456789"
      - "+5491187654321" 
      - "+542114567890"
      - "+543514567890"
      - "+541122334455"
    
    service_categories:
      - "HAIRCUT"
      - "BEARD"  
      - "PREMIUM"
      - "SHAVE"
      - "STYLING"
    
    argentina_names:
      - "Carlos Rodríguez"
      - "María González"
      - "Diego Fernández"
      - "Sofía López"
      - "Martín García"
    
    booking_times:
      - "2024-12-15T09:00:00-03:00"
      - "2024-12-15T10:30:00-03:00"
      - "2024-12-15T12:00:00-03:00"
      - "2024-12-15T14:30:00-03:00"
      - "2024-12-15T16:00:00-03:00"

scenarios:
  # Core user flows for Argentina market
  - name: "User Registration Flow"
    weight: 15
    flow:
      - post:
          url: "/api/auth/register"
          json:
            email: "{{ generateEmail() }}"
            password: "{{ generatePassword() }}"
            name: "{{ $randomFromArray(argentina_names) }}"
            phone: "{{ $randomFromArray(argentina_phones) }}"
            role: "CLIENT"
          expect:
            - statusCode: 201
            - hasProperty: "token"
            - hasProperty: "user"
          capture:
            - json: "$.token"
              as: "authToken"
            - json: "$.user.id" 
              as: "userId"

  - name: "Provider Registration Flow"
    weight: 10
    flow:
      - post:
          url: "/api/auth/register"
          json:
            email: "{{ generateProviderEmail() }}"
            password: "{{ generatePassword() }}"
            name: "{{ $randomFromArray(argentina_names) }}"
            phone: "{{ $randomFromArray(argentina_phones) }}"
            role: "PROVIDER"
            dni: "{{ generateArgentinaDNI() }}"
            businessName: "Barbería {{ generateBusinessName() }}"
          expect:
            - statusCode: 201
          capture:
            - json: "$.token"
              as: "providerToken"
            - json: "$.user.id"
              as: "providerId"

  - name: "User Login Flow"
    weight: 20
    flow:
      - post:
          url: "/api/auth/login" 
          json:
            email: "test@barberpro.com"
            password: "TestPass123!"
          expect:
            - statusCode: [200, 401]  # Allow test failures
          capture:
            - json: "$.token"
              as: "loginToken"

  - name: "Service Search and Browse"
    weight: 25
    flow:
      # Search all services
      - get:
          url: "/api/services/search"
          expect:
            - statusCode: 200
            - contentType: json
      
      # Search by category
      - get:
          url: "/api/services/search?category={{ $randomFromArray(service_categories) }}"
          expect:
            - statusCode: 200
      
      # Search by price range (Argentina pesos)
      - get:
          url: "/api/services/search?minPrice=1000&maxPrice=3000"
          expect:
            - statusCode: 200
      
      # Search with Spanish terms
      - get:
          url: "/api/services/search?q=corte"
          expect:
            - statusCode: 200

  - name: "Service Creation (Provider)"
    weight: 10
    flow:
      - function: "authenticateAsProvider"
      - post:
          url: "/api/services"
          headers:
            Authorization: "Bearer {{ providerToken }}"
          json:
            name: "{{ generateServiceName() }}"
            description: "{{ generateServiceDescription() }}"
            duration: "{{ generateDuration() }}"
            price: "{{ generateArgentinaPrice() }}"
            category: "{{ $randomFromArray(service_categories) }}"
          expect:
            - statusCode: [201, 401, 403]  # Various auth states

  - name: "Booking Creation Flow"
    weight: 15
    flow:
      - function: "authenticateAsClient"
      - function: "findAvailableService"
      - post:
          url: "/api/bookings"
          headers:
            Authorization: "Bearer {{ clientToken }}"
          json:
            serviceId: "{{ availableServiceId }}"
            providerId: "{{ serviceProviderId }}"
            scheduledAt: "{{ $randomFromArray(booking_times) }}"
            notes: "Booking de prueba para load testing"
            notificationPreferences:
              whatsapp: true
              email: true
          expect:
            - statusCode: [201, 409, 400]  # Creation or conflicts
          capture:
            - json: "$.id"
              as: "bookingId"

  - name: "Booking Status Management"
    weight: 10
    flow:
      - function: "authenticateAsProvider" 
      - function: "findPendingBooking"
      - patch:
          url: "/api/bookings/{{ bookingId }}/confirm"
          headers:
            Authorization: "Bearer {{ providerToken }}"
          expect:
            - statusCode: [200, 404, 403]

  - name: "User Profile and Dashboard"
    weight: 8
    flow:
      - function: "authenticateAsClient"
      - get:
          url: "/api/users/profile"
          headers:
            Authorization: "Bearer {{ clientToken }}"
          expect:
            - statusCode: [200, 401]
      
      - get:
          url: "/api/bookings/client"
          headers:
            Authorization: "Bearer {{ clientToken }}"
          expect:
            - statusCode: [200, 401]

  - name: "Provider Dashboard"
    weight: 7
    flow:
      - function: "authenticateAsProvider"
      - get:
          url: "/api/bookings/provider"
          headers:
            Authorization: "Bearer {{ providerToken }}"
          expect:
            - statusCode: [200, 401]
      
      - get:
          url: "/api/services/provider/{{ providerId }}"
          headers:
            Authorization: "Bearer {{ providerToken }}"
          expect:
            - statusCode: [200, 401]
      
      - get:
          url: "/api/bookings/analytics/stats"
          headers:
            Authorization: "Bearer {{ providerToken }}"
          expect:
            - statusCode: [200, 401]

# Specific test scenarios for Argentina features
argentina_scenarios:
  - name: "Argentina Phone Validation Load"
    weight: 5
    flow:
      - loop:
        - post:
            url: "/api/auth/register"
            json:
              email: "{{ generateEmail() }}"
              password: "TestPass123!"
              name: "Test User"
              phone: "{{ generateArgentinaPhone() }}"
              role: "CLIENT"
        count: 10

  - name: "DNI Validation Load"
    weight: 3
    flow:
      - loop:
        - post:
            url: "/api/auth/register"
            json:
              email: "{{ generateProviderEmail() }}"
              password: "TestPass123!"
              name: "Test Provider"
              phone: "+5491123456789"
              role: "PROVIDER" 
              dni: "{{ generateArgentinaDNI() }}"
              businessName: "Test Barbería"
        count: 5

  - name: "Spanish Search Performance"
    weight: 7
    flow:
      - get:
          url: "/api/services/search?q=corte"
      - get:
          url: "/api/services/search?q=barba"
      - get:
          url: "/api/services/search?q=peluquería"
      - get:
          url: "/api/services/search?q=peinado"

# Concurrent booking stress test
stress_scenarios:
  - name: "Concurrent Booking Stress"
    weight: 100
    flow:
      - post:
          url: "/api/bookings"
          headers:
            Authorization: "Bearer {{ getRandomClientToken() }}"
          json:
            serviceId: "{{ getPopularServiceId() }}"
            providerId: "{{ getRandomProviderId() }}"
            scheduledAt: "2024-12-15T14:00:00-03:00"  # Same time slot
            notes: "Stress test booking"
          expect:
            - statusCode: [201, 409]  # Success or conflict expected

# Performance monitoring
monitoring:
  statsd:
    host: localhost
    port: 8125
    prefix: "barberpro.loadtest"

  # Custom metrics for Argentina market
  metrics:
    - name: "argentina_phone_validation_time"
      expression: "response.timings.phases.firstByte"
      condition: "request.url.includes('auth/register')"
    
    - name: "booking_creation_time"
      expression: "response.timings.phases.firstByte" 
      condition: "request.url.includes('bookings') && request.method === 'POST'"
    
    - name: "spanish_search_time"
      expression: "response.timings.phases.firstByte"
      condition: "request.url.includes('search') && request.url.includes('q=')"

# Results and reporting
reporting:
  json: "./test-results/load-test-results.json"
  html: "./test-results/load-test-report.html"
  
  # Argentina-specific performance report
  custom:
    argentina_performance:
      auth_avg_response: "< 200ms"
      booking_avg_response: "< 500ms" 
      search_avg_response: "< 300ms"
      concurrent_booking_success_rate: "> 95%"
      spanish_search_accuracy: "> 90%"