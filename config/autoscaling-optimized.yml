# BarberPro Auto-Scaling Configuration - Launch Day Optimized
# Based on real Argentina traffic patterns observed during Day 6 launch

autoscaling:
  # CPU-based scaling thresholds optimized for Argentina traffic
  cpu_threshold_scale_up: 70      # Scale up at 70% CPU (reduced from 80% for faster response)
  cpu_threshold_scale_down: 30    # Scale down at 30% CPU (conservative to avoid thrashing)
  
  # Memory-based scaling thresholds
  memory_threshold_scale_up: 75   # Scale up at 75% memory usage
  memory_threshold_scale_down: 40 # Scale down at 40% memory usage
  
  # Scaling cooldown periods (Argentina business hours optimized)
  scale_up_cooldown: 180          # 3 minutes cooldown for scale up (faster response)
  scale_down_cooldown: 600        # 10 minutes cooldown for scale down (conservative)
  
  # Replica limits
  min_replicas: 2                 # Minimum 2 replicas for availability
  max_replicas: 10                # Maximum 10 replicas for cost control
  
  # Argentina business hours optimization
  argentina_business_hours:
    timezone: "America/Argentina/Buenos_Aires"
    start_hour: 9                 # 9 AM ART
    end_hour: 18                  # 6 PM ART
    min_replicas_business: 3      # Minimum 3 replicas during business hours
    max_replicas_business: 15     # Allow more scaling during business hours
    
  # Weekend optimization  
  weekend_scaling:
    min_replicas: 2               # Lower minimum on weekends
    max_replicas: 8               # Lower maximum on weekends
    
  # Scaling metrics and weights
  scaling_metrics:
    - name: cpu_utilization
      weight: 40                  # 40% weight for CPU
      threshold_up: 70
      threshold_down: 30
      
    - name: memory_utilization  
      weight: 30                  # 30% weight for memory
      threshold_up: 75
      threshold_down: 40
      
    - name: active_connections
      weight: 20                  # 20% weight for connections
      threshold_up: 150           # Scale up at 150 active DB connections
      threshold_down: 50          # Scale down at 50 active DB connections
      
    - name: response_time
      weight: 10                  # 10% weight for response time
      threshold_up: 200           # Scale up if P95 > 200ms
      threshold_down: 100         # Scale down if P95 < 100ms
      
  # Business-driven scaling
  business_metrics_scaling:
    enabled: true
    
    booking_rate_scaling:
      enabled: true
      scale_up_bookings_per_minute: 10    # Scale up if >10 bookings/minute
      scale_down_bookings_per_minute: 2   # Scale down if <2 bookings/minute
      
    payment_processing_scaling:
      enabled: true
      scale_up_payment_latency: 2000      # Scale up if payment latency >2s
      scale_down_payment_latency: 1000    # Scale down if payment latency <1s
      
    user_session_scaling:
      enabled: true
      scale_up_active_sessions: 200       # Scale up if >200 active sessions
      scale_down_active_sessions: 50      # Scale down if <50 active sessions

# Predictive scaling for known patterns
predictive_scaling:
  enabled: true
  
  # Argentina business patterns
  daily_patterns:
    - name: "morning_rush"
      time: "09:00"
      timezone: "America/Argentina/Buenos_Aires"
      pre_scale_minutes: 15       # Scale up 15 minutes before
      target_replicas: 5
      
    - name: "lunch_peak"  
      time: "13:00"
      timezone: "America/Argentina/Buenos_Aires"
      pre_scale_minutes: 10
      target_replicas: 4
      
    - name: "evening_peak"
      time: "17:00" 
      timezone: "America/Argentina/Buenos_Aires"
      pre_scale_minutes: 15
      target_replicas: 6
      
    - name: "night_scale_down"
      time: "22:00"
      timezone: "America/Argentina/Buenos_Aires"
      pre_scale_minutes: 0
      target_replicas: 2

  # Weekly patterns
  weekly_patterns:
    - name: "weekend_prep"
      day: "friday"
      time: "18:00"
      pre_scale_minutes: 30
      target_replicas: 4
      
    - name: "monday_prep"
      day: "monday"  
      time: "08:00"
      pre_scale_minutes: 30
      target_replicas: 4

# Health check configuration for scaling decisions
health_checks:
  endpoint: "/api/health"
  timeout: 5000                   # 5 second timeout
  interval: 15000                 # Check every 15 seconds
  healthy_threshold: 2            # 2 successful checks = healthy
  unhealthy_threshold: 3          # 3 failed checks = unhealthy
  
  # Don't scale down unhealthy instances
  scale_down_when_unhealthy: false
  
  # Graceful shutdown period
  graceful_shutdown_seconds: 60

# Notification configuration
notifications:
  scaling_events: true
  webhook_url: "${SLACK_WEBHOOK_SCALING}"
  
  notify_on:
    - scale_up
    - scale_down
    - scaling_failed
    - health_check_failed
    - predictive_scaling_triggered
    
  # Argentina timezone for notifications
  notification_timezone: "America/Argentina/Buenos_Aires"

# Integration with existing monitoring
monitoring_integration:
  prometheus_enabled: true
  grafana_dashboard: "barberpro-autoscaling"
  
  custom_metrics:
    - barberpro_current_replicas
    - barberpro_target_replicas  
    - barberpro_scaling_events_total
    - barberpro_scaling_duration_seconds
    - barberpro_business_hours_active

# Cost optimization
cost_optimization:
  enabled: true
  
  # Use spot instances for non-critical scaling
  spot_instances:
    enabled: true
    max_spot_percentage: 50       # Max 50% spot instances
    fallback_to_on_demand: true
    
  # Optimize for Argentina region pricing
  preferred_instance_types:
    - "t3.medium"     # Cost-effective for baseline load
    - "t3.large"      # Good for moderate scaling
    - "c5.large"      # CPU-optimized for high load
    
  # Schedule-based cost optimization
  scheduled_scaling:
    enabled: true
    
    # Scale down during Argentina night hours
    night_hours:
      start: "23:00"
      end: "07:00"
      timezone: "America/Argentina/Buenos_Aires" 
      min_replicas: 1             # Minimal replicas overnight
      
    # Weekend cost optimization
    weekend_scaling:
      enabled: true
      min_replicas: 2             # Lower minimum on weekends
      max_replicas: 6             # Lower maximum on weekends