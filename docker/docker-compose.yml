# BarberPro Base Docker Compose Configuration
# Base services: PostgreSQL, Redis, Nginx
# Use with environment-specific overrides:
#   Development: docker-compose -f docker/docker-compose.yml -f docker/docker-compose.dev.yml up
#   Production: docker-compose -f docker/docker-compose.yml -f docker/docker-compose.prod.yml up

services:
  # PostgreSQL Database - Version 16
  postgres:
    image: postgres:16-alpine
    container_name: barberpro-postgres-base
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-barberpro_dev}
      POSTGRES_USER: ${POSTGRES_USER:-barberpro}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-barberpro_dev_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - barberpro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-barberpro} -d ${POSTGRES_DB:-barberpro_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Redis Cache - Version 7
  redis:
    image: redis:7-alpine
    container_name: barberpro-redis-base
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./configs/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - barberpro-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.27-alpine
    container_name: barberpro-nginx-base
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/proxy_params.conf:/etc/nginx/proxy_params.conf:ro
      - nginx_logs:/var/log/nginx
    networks:
      - barberpro-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  # Database Administration (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:8.12
    container_name: barberpro-pgadmin-base
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@barberpro.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - barberpro-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Redis Admin Interface
  redis-commander:
    image: ghcr.io/joeferner/redis-commander:0.8.1
    container_name: barberpro-redis-commander-base
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: ${REDIS_COMMANDER_USER:-admin}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD:-admin}
      PORT: 8081
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - barberpro-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

volumes:
  postgres_data:
    driver: local
    name: barberpro-postgres-data
  redis_data:
    driver: local
    name: barberpro-redis-data
  pgadmin_data:
    driver: local
    name: barberpro-pgadmin-data
  nginx_logs:
    driver: local
    name: barberpro-nginx-logs

networks:
  barberpro-network:
    driver: bridge
    name: barberpro-network
