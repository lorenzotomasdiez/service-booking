{
  "name": "barberpro-platform",
  "version": "1.0.0",
  "description": "BarberPro - Premium service booking platform for Argentina",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "concurrently \"npm run backend\" \"npm run frontend\"",
    "backend": "cd backend && npm run dev",
    "frontend": "cd frontend && npm run dev",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "start": "npm run start:backend",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npm run preview",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:build": "docker-compose build",
    "docker:logs": "docker-compose logs -f",
    "docker:dev": "docker-compose up -d postgres redis",
    "db:generate": "cd backend && npx prisma generate",
    "db:migrate": "cd backend && npx prisma migrate dev",
    "db:migrate:prod": "cd backend && npx prisma migrate deploy",
    "db:studio": "cd backend && npx prisma studio",
    "db:seed": "cd backend && npx prisma db seed",
    "db:reset": "cd backend && npx prisma migrate reset",
    "setup": "npm run install:all && npm run db:generate",
    "setup:dev": "npm run install:all && npm run docker:dev && npm run db:generate",
    "install:all": "npm install && cd backend && npm install && cd ../frontend && npm install",
    "clean": "rm -rf node_modules backend/node_modules frontend/node_modules backend/dist frontend/.svelte-kit",
    "test": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:unit": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "test:integration": "cd backend && npm run test:integration",
    "test:e2e": "npx playwright test",
    "test:e2e:ui": "npx playwright test --ui",
    "test:e2e:debug": "npx playwright test --debug",
    "test:performance": "cd tests && npm run test:performance",
    "test:security": "cd tests && npm run test:security",
    "test:smoke": "curl -f http://localhost:3000/health || echo 'Health check failed'",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "railway:setup": "./scripts/setup-railway.sh",
    "railway:deploy:staging": "railway deploy --environment staging",
    "railway:deploy:production": "railway deploy --environment production",
    "railway:logs:staging": "railway logs --environment staging",
    "railway:logs:production": "railway logs --environment production",
    "validate:infrastructure": "./scripts/validate-infrastructure.sh",
    "dev:status": "./.claude/hooks/dev-status.sh",
    "dev:logs": "./.claude/hooks/monitor-logs.sh",
    "dev:logs:backend": "./.claude/hooks/monitor-logs.sh backend",
    "dev:logs:frontend": "./.claude/hooks/monitor-logs.sh frontend",
    "dev:logs:both": "./.claude/hooks/monitor-logs.sh both",
    "dev:stop": "./.claude/hooks/stop-dev.sh",
    "dev:restart": "./.claude/hooks/stop-dev.sh && ./.claude/hooks/start-dev.sh",
    "dev:start:backend": "./.claude/hooks/manage-service.sh start backend",
    "dev:start:frontend": "./.claude/hooks/manage-service.sh start frontend",
    "dev:stop:backend": "./.claude/hooks/manage-service.sh stop backend",
    "dev:stop:frontend": "./.claude/hooks/manage-service.sh stop frontend",
    "dev:restart:backend": "./.claude/hooks/manage-service.sh restart backend",
    "dev:restart:frontend": "./.claude/hooks/manage-service.sh restart frontend",
    "claude": "./scripts/code.sh",
    "claude:dev": "./scripts/code.sh --dev --verbose",
    "claude:minimal": "./scripts/code.sh --minimal",
    "claude:verbose": "./scripts/code.sh --verbose"
  },
  "workspaces": [
    "backend",
    "frontend"
  ],
  "devDependencies": {
    "@playwright/test": "^1.47.2",
    "artillery": "^2.0.20",
    "concurrently": "^9.2.1"
  },
  "keywords": [
    "barberpro",
    "booking",
    "argentina",
    "svelte",
    "fastify",
    "prisma",
    "postgresql",
    "redis"
  ],
  "author": "BarberPro Team",
  "license": "UNLICENSED",
  "dependencies": {
    "axios": "^1.12.0",
    "node-fetch": "^3.3.2",
    "ws": "^8.18.3"
  }
}
