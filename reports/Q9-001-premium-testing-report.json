{
  "executionSummary": {
    "executionDate": "2025-09-13T08:13:37.057Z",
    "totalDuration": 37397,
    "testPhases": 4,
    "overallSuccess": 0.5714285714285714
  },
  "qualityMetrics": {
    "testCoverage": 0,
    "performanceScore": 87.5,
    "securityScore": 98.5,
    "accessibilityScore": 100,
    "argentinaCompliance": 100
  },
  "detailedResults": {
    "premiumFeatures": {
      "category": "Premium Features",
      "totalSuites": 6,
      "passed": 0,
      "failed": 6,
      "coverage": 0,
      "details": [
        {
          "name": "Subscription Tier Management",
          "status": "FAILED",
          "error": "Subscription Tier Management failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/unit/premium-features.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m69\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m69\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m98\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m98\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m119\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'upgradeSubscription' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m119\u001b[0m       const result = await premiumFeaturesService.upgradeSubscription(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m143\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getProviderAnalytics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m143\u001b[0m       const analytics = await premiumFeaturesService.getProviderAnalytics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m160\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculatePerformanceMetrics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m160\u001b[0m       const metrics = await premiumFeaturesService.calculatePerformanceMetrics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m191\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m191\u001b[0m       const result = await premiumFeaturesService.addLocation(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m208\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m208\u001b[0m         premiumFeaturesService.addLocation('provider-2', {\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m228\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'processReferral' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m228\u001b[0m       const result = await premiumFeaturesService.processReferral(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateReferralBonus' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m243\u001b[0m       const bonus = await premiumFeaturesService.calculateReferralBonus(\n    \u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateLoyaltyPoints' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m261\u001b[0m       const points = await premiumFeaturesService.calculateLoyaltyPoints(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m275\u001b[0m:\u001b[93m56\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkTierProgression' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m275\u001b[0m       const progression = await premiumFeaturesService.checkTierProgression(\n    \u001b[7m   \u001b[0m \u001b[91m                                                       ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m292\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateDynamicPricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m292\u001b[0m       const dynamicPrice = await premiumFeaturesService.calculateDynamicPricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m306\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateSurgePricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m306\u001b[0m       const surgePrice = await premiumFeaturesService.calculateSurgePricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m324\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validatePricingLogic' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m324\u001b[0m       const validation = await premiumFeaturesService.validatePricingLogic(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'query' implicitly has an 'any' type.\n\n    \u001b[7m338\u001b[0m       mockPrisma.provider.findUnique.mockImplementation((query) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m349\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m349\u001b[0m           premiumFeaturesService.validateFeatureAccess(id, 'advancedAnalytics')\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m354\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'v' implicitly has an 'any' type.\n\n    \u001b[7m354\u001b[0m       expect(validations.every(v => v === true)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m365\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m368\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m368\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m383\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m383\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m399\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkSubscriptionAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m399\u001b[0m       const access = await premiumFeaturesService.checkSubscriptionAccess('provider-1');\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m415\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateAFIPReport' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m415\u001b[0m       const afipData = await premiumFeaturesService.generateAFIPReport(\n    \u001b[7m   \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m433\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'configurePaymentPreferences' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m433\u001b[0m       const result = await premiumFeaturesService.configurePaymentPreferences(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.451 s\nRan all test suites matching /tests\\/unit\\/premium-features.test.ts/i with tests matching \"Subscription Tier\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/unit/premium-features.test.ts '--testNamePattern=Subscription Tier'\n"
        },
        {
          "name": "Advanced Provider Dashboard",
          "status": "FAILED",
          "error": "Advanced Provider Dashboard failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/unit/premium-features.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m69\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m69\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m98\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m98\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m119\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'upgradeSubscription' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m119\u001b[0m       const result = await premiumFeaturesService.upgradeSubscription(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m143\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getProviderAnalytics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m143\u001b[0m       const analytics = await premiumFeaturesService.getProviderAnalytics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m160\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculatePerformanceMetrics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m160\u001b[0m       const metrics = await premiumFeaturesService.calculatePerformanceMetrics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m191\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m191\u001b[0m       const result = await premiumFeaturesService.addLocation(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m208\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m208\u001b[0m         premiumFeaturesService.addLocation('provider-2', {\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m228\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'processReferral' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m228\u001b[0m       const result = await premiumFeaturesService.processReferral(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateReferralBonus' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m243\u001b[0m       const bonus = await premiumFeaturesService.calculateReferralBonus(\n    \u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateLoyaltyPoints' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m261\u001b[0m       const points = await premiumFeaturesService.calculateLoyaltyPoints(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m275\u001b[0m:\u001b[93m56\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkTierProgression' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m275\u001b[0m       const progression = await premiumFeaturesService.checkTierProgression(\n    \u001b[7m   \u001b[0m \u001b[91m                                                       ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m292\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateDynamicPricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m292\u001b[0m       const dynamicPrice = await premiumFeaturesService.calculateDynamicPricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m306\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateSurgePricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m306\u001b[0m       const surgePrice = await premiumFeaturesService.calculateSurgePricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m324\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validatePricingLogic' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m324\u001b[0m       const validation = await premiumFeaturesService.validatePricingLogic(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'query' implicitly has an 'any' type.\n\n    \u001b[7m338\u001b[0m       mockPrisma.provider.findUnique.mockImplementation((query) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m349\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m349\u001b[0m           premiumFeaturesService.validateFeatureAccess(id, 'advancedAnalytics')\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m354\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'v' implicitly has an 'any' type.\n\n    \u001b[7m354\u001b[0m       expect(validations.every(v => v === true)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m365\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m368\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m368\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m383\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m383\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m399\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkSubscriptionAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m399\u001b[0m       const access = await premiumFeaturesService.checkSubscriptionAccess('provider-1');\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m415\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateAFIPReport' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m415\u001b[0m       const afipData = await premiumFeaturesService.generateAFIPReport(\n    \u001b[7m   \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m433\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'configurePaymentPreferences' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m433\u001b[0m       const result = await premiumFeaturesService.configurePaymentPreferences(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.449 s\nRan all test suites matching /tests\\/unit\\/premium-features.test.ts/i with tests matching \"Advanced Provider Dashboard\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/unit/premium-features.test.ts '--testNamePattern=Advanced Provider Dashboard'\n"
        },
        {
          "name": "Multi-Location Management",
          "status": "FAILED",
          "error": "Multi-Location Management failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/unit/premium-features.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m69\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m69\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m98\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m98\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m119\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'upgradeSubscription' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m119\u001b[0m       const result = await premiumFeaturesService.upgradeSubscription(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m143\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getProviderAnalytics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m143\u001b[0m       const analytics = await premiumFeaturesService.getProviderAnalytics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m160\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculatePerformanceMetrics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m160\u001b[0m       const metrics = await premiumFeaturesService.calculatePerformanceMetrics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m191\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m191\u001b[0m       const result = await premiumFeaturesService.addLocation(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m208\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m208\u001b[0m         premiumFeaturesService.addLocation('provider-2', {\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m228\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'processReferral' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m228\u001b[0m       const result = await premiumFeaturesService.processReferral(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateReferralBonus' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m243\u001b[0m       const bonus = await premiumFeaturesService.calculateReferralBonus(\n    \u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateLoyaltyPoints' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m261\u001b[0m       const points = await premiumFeaturesService.calculateLoyaltyPoints(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m275\u001b[0m:\u001b[93m56\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkTierProgression' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m275\u001b[0m       const progression = await premiumFeaturesService.checkTierProgression(\n    \u001b[7m   \u001b[0m \u001b[91m                                                       ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m292\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateDynamicPricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m292\u001b[0m       const dynamicPrice = await premiumFeaturesService.calculateDynamicPricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m306\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateSurgePricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m306\u001b[0m       const surgePrice = await premiumFeaturesService.calculateSurgePricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m324\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validatePricingLogic' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m324\u001b[0m       const validation = await premiumFeaturesService.validatePricingLogic(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'query' implicitly has an 'any' type.\n\n    \u001b[7m338\u001b[0m       mockPrisma.provider.findUnique.mockImplementation((query) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m349\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m349\u001b[0m           premiumFeaturesService.validateFeatureAccess(id, 'advancedAnalytics')\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m354\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'v' implicitly has an 'any' type.\n\n    \u001b[7m354\u001b[0m       expect(validations.every(v => v === true)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m365\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m368\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m368\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m383\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m383\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m399\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkSubscriptionAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m399\u001b[0m       const access = await premiumFeaturesService.checkSubscriptionAccess('provider-1');\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m415\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateAFIPReport' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m415\u001b[0m       const afipData = await premiumFeaturesService.generateAFIPReport(\n    \u001b[7m   \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m433\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'configurePaymentPreferences' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m433\u001b[0m       const result = await premiumFeaturesService.configurePaymentPreferences(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.44 s\nRan all test suites matching /tests\\/unit\\/premium-features.test.ts/i with tests matching \"Multi-Location\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/unit/premium-features.test.ts --testNamePattern=Multi-Location\n"
        },
        {
          "name": "Referral Program Testing",
          "status": "FAILED",
          "error": "Referral Program Testing failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/unit/premium-features.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m69\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m69\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m98\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m98\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m119\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'upgradeSubscription' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m119\u001b[0m       const result = await premiumFeaturesService.upgradeSubscription(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m143\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getProviderAnalytics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m143\u001b[0m       const analytics = await premiumFeaturesService.getProviderAnalytics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m160\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculatePerformanceMetrics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m160\u001b[0m       const metrics = await premiumFeaturesService.calculatePerformanceMetrics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m191\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m191\u001b[0m       const result = await premiumFeaturesService.addLocation(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m208\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m208\u001b[0m         premiumFeaturesService.addLocation('provider-2', {\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m228\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'processReferral' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m228\u001b[0m       const result = await premiumFeaturesService.processReferral(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateReferralBonus' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m243\u001b[0m       const bonus = await premiumFeaturesService.calculateReferralBonus(\n    \u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateLoyaltyPoints' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m261\u001b[0m       const points = await premiumFeaturesService.calculateLoyaltyPoints(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m275\u001b[0m:\u001b[93m56\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkTierProgression' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m275\u001b[0m       const progression = await premiumFeaturesService.checkTierProgression(\n    \u001b[7m   \u001b[0m \u001b[91m                                                       ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m292\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateDynamicPricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m292\u001b[0m       const dynamicPrice = await premiumFeaturesService.calculateDynamicPricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m306\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateSurgePricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m306\u001b[0m       const surgePrice = await premiumFeaturesService.calculateSurgePricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m324\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validatePricingLogic' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m324\u001b[0m       const validation = await premiumFeaturesService.validatePricingLogic(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'query' implicitly has an 'any' type.\n\n    \u001b[7m338\u001b[0m       mockPrisma.provider.findUnique.mockImplementation((query) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m349\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m349\u001b[0m           premiumFeaturesService.validateFeatureAccess(id, 'advancedAnalytics')\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m354\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'v' implicitly has an 'any' type.\n\n    \u001b[7m354\u001b[0m       expect(validations.every(v => v === true)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m365\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m368\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m368\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m383\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m383\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m399\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkSubscriptionAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m399\u001b[0m       const access = await premiumFeaturesService.checkSubscriptionAccess('provider-1');\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m415\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateAFIPReport' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m415\u001b[0m       const afipData = await premiumFeaturesService.generateAFIPReport(\n    \u001b[7m   \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m433\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'configurePaymentPreferences' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m433\u001b[0m       const result = await premiumFeaturesService.configurePaymentPreferences(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.425 s\nRan all test suites matching /tests\\/unit\\/premium-features.test.ts/i with tests matching \"Referral Program\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/unit/premium-features.test.ts '--testNamePattern=Referral Program'\n"
        },
        {
          "name": "Loyalty Points System",
          "status": "FAILED",
          "error": "Loyalty Points System failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/unit/premium-features.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m69\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m69\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m98\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m98\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m119\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'upgradeSubscription' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m119\u001b[0m       const result = await premiumFeaturesService.upgradeSubscription(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m143\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getProviderAnalytics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m143\u001b[0m       const analytics = await premiumFeaturesService.getProviderAnalytics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m160\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculatePerformanceMetrics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m160\u001b[0m       const metrics = await premiumFeaturesService.calculatePerformanceMetrics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m191\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m191\u001b[0m       const result = await premiumFeaturesService.addLocation(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m208\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m208\u001b[0m         premiumFeaturesService.addLocation('provider-2', {\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m228\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'processReferral' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m228\u001b[0m       const result = await premiumFeaturesService.processReferral(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateReferralBonus' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m243\u001b[0m       const bonus = await premiumFeaturesService.calculateReferralBonus(\n    \u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateLoyaltyPoints' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m261\u001b[0m       const points = await premiumFeaturesService.calculateLoyaltyPoints(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m275\u001b[0m:\u001b[93m56\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkTierProgression' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m275\u001b[0m       const progression = await premiumFeaturesService.checkTierProgression(\n    \u001b[7m   \u001b[0m \u001b[91m                                                       ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m292\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateDynamicPricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m292\u001b[0m       const dynamicPrice = await premiumFeaturesService.calculateDynamicPricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m306\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateSurgePricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m306\u001b[0m       const surgePrice = await premiumFeaturesService.calculateSurgePricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m324\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validatePricingLogic' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m324\u001b[0m       const validation = await premiumFeaturesService.validatePricingLogic(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'query' implicitly has an 'any' type.\n\n    \u001b[7m338\u001b[0m       mockPrisma.provider.findUnique.mockImplementation((query) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m349\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m349\u001b[0m           premiumFeaturesService.validateFeatureAccess(id, 'advancedAnalytics')\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m354\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'v' implicitly has an 'any' type.\n\n    \u001b[7m354\u001b[0m       expect(validations.every(v => v === true)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m365\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m368\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m368\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m383\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m383\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m399\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkSubscriptionAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m399\u001b[0m       const access = await premiumFeaturesService.checkSubscriptionAccess('provider-1');\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m415\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateAFIPReport' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m415\u001b[0m       const afipData = await premiumFeaturesService.generateAFIPReport(\n    \u001b[7m   \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m433\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'configurePaymentPreferences' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m433\u001b[0m       const result = await premiumFeaturesService.configurePaymentPreferences(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.42 s\nRan all test suites matching /tests\\/unit\\/premium-features.test.ts/i with tests matching \"Loyalty Points\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/unit/premium-features.test.ts '--testNamePattern=Loyalty Points'\n"
        },
        {
          "name": "Dynamic Pricing Engine",
          "status": "FAILED",
          "error": "Dynamic Pricing Engine failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/unit/premium-features.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m69\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m69\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m98\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m98\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m  \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m119\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'upgradeSubscription' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m119\u001b[0m       const result = await premiumFeaturesService.upgradeSubscription(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m143\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getProviderAnalytics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m143\u001b[0m       const analytics = await premiumFeaturesService.getProviderAnalytics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m160\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculatePerformanceMetrics' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m160\u001b[0m       const metrics = await premiumFeaturesService.calculatePerformanceMetrics(\n    \u001b[7m   \u001b[0m \u001b[91m                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m191\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m191\u001b[0m       const result = await premiumFeaturesService.addLocation(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m208\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'addLocation' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m208\u001b[0m         premiumFeaturesService.addLocation('provider-2', {\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m228\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'processReferral' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m228\u001b[0m       const result = await premiumFeaturesService.processReferral(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m243\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateReferralBonus' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m243\u001b[0m       const bonus = await premiumFeaturesService.calculateReferralBonus(\n    \u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m261\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateLoyaltyPoints' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m261\u001b[0m       const points = await premiumFeaturesService.calculateLoyaltyPoints(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m275\u001b[0m:\u001b[93m56\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkTierProgression' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m275\u001b[0m       const progression = await premiumFeaturesService.checkTierProgression(\n    \u001b[7m   \u001b[0m \u001b[91m                                                       ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m292\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateDynamicPricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m292\u001b[0m       const dynamicPrice = await premiumFeaturesService.calculateDynamicPricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m306\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'calculateSurgePricing' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m306\u001b[0m       const surgePrice = await premiumFeaturesService.calculateSurgePricing(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m324\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validatePricingLogic' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m324\u001b[0m       const validation = await premiumFeaturesService.validatePricingLogic(\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m338\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'query' implicitly has an 'any' type.\n\n    \u001b[7m338\u001b[0m       mockPrisma.provider.findUnique.mockImplementation((query) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m349\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m349\u001b[0m           premiumFeaturesService.validateFeatureAccess(id, 'advancedAnalytics')\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m354\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'v' implicitly has an 'any' type.\n\n    \u001b[7m354\u001b[0m       expect(validations.every(v => v === true)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m365\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m365\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m368\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m368\u001b[0m       await premiumFeaturesService.validateFeatureAccess('provider-1', 'advancedAnalytics');\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m383\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateFeatureAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m383\u001b[0m       const hasAccess = await premiumFeaturesService.validateFeatureAccess(\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m399\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'checkSubscriptionAccess' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m399\u001b[0m       const access = await premiumFeaturesService.checkSubscriptionAccess('provider-1');\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m415\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateAFIPReport' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m415\u001b[0m       const afipData = await premiumFeaturesService.generateAFIPReport(\n    \u001b[7m   \u001b[0m \u001b[91m                                                    ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/unit/premium-features.test.ts\u001b[0m:\u001b[93m433\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'configurePaymentPreferences' does not exist on type 'PremiumFeaturesService'.\n\n    \u001b[7m433\u001b[0m       const result = await premiumFeaturesService.configurePaymentPreferences(\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.464 s\nRan all test suites matching /tests\\/unit\\/premium-features.test.ts/i with tests matching \"Dynamic Pricing\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/unit/premium-features.test.ts '--testNamePattern=Dynamic Pricing'\n"
        }
      ]
    },
    "integrationSystems": {
      "category": "Integration Systems",
      "totalSuites": 6,
      "passed": 0,
      "failed": 6,
      "coverage": 0,
      "details": [
        {
          "name": "WhatsApp Business API Integration",
          "status": "FAILED",
          "error": "WhatsApp Business API Integration failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/whatsapp-integration.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../../src/services/whatsapp-integration\"' has no exported member 'whatsAppService'.\n\n    \u001b[7m4\u001b[0m import { whatsAppService } from '../../src/services/whatsapp-integration';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/email-integration' or its corresponding type declarations.\n\n    \u001b[7m5\u001b[0m import { emailService } from '../../src/services/email-integration';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/sms-integration' or its corresponding type declarations.\n\n    \u001b[7m6\u001b[0m import { smsService } from '../../src/services/sms-integration';\n    \u001b[7m \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m464\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'Promise<{ data: { messages: { id: string; }[]; }; status: number; }>' is not assignable to type 'Promise<R>'.\n      Type '{ data: { messages: { id: string; }[]; }; status: number; }' is not assignable to type 'R'.\n        'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { messages: { id: string; }[]; }; status: number; }'.\n\n    \u001b[7m464\u001b[0m         Promise.resolve({\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m465\u001b[0m           data: { messages: [{ id: `msg-${Date.now()}` }] },\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m466\u001b[0m           status: 200,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m467\u001b[0m         })\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~\u001b[0m\n\n      \u001b[96m../node_modules/axios/index.d.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m511\u001b[0m   post<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        The expected type comes from the return type of this signature.\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m484\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '() => Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to parameter of type '<T = any, R = AxiosResponse<T, any, {}>, D = any>(url: string, data?: D | undefined, config?: AxiosRequestConfig<D> | undefined) => Promise<R>'.\n      Type 'Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n        Type 'Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n          Type '{ data: { success: boolean; }; status: number; }' is not assignable to type 'R'.\n            'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { success: boolean; }; status: number; }'.\n\n    \u001b[7m484\u001b[0m       mockedAxios.post.mockImplementation(() => {\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.504 s\nRan all test suites matching /tests\\/integration\\/whatsapp-integration.test.ts/i with tests matching \"WhatsApp\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/integration/whatsapp-integration.test.ts --testNamePattern=WhatsApp\n"
        },
        {
          "name": "Calendar Synchronization",
          "status": "FAILED",
          "error": "Calendar Synchronization failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/whatsapp-integration.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../../src/services/whatsapp-integration\"' has no exported member 'whatsAppService'.\n\n    \u001b[7m4\u001b[0m import { whatsAppService } from '../../src/services/whatsapp-integration';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/email-integration' or its corresponding type declarations.\n\n    \u001b[7m5\u001b[0m import { emailService } from '../../src/services/email-integration';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/sms-integration' or its corresponding type declarations.\n\n    \u001b[7m6\u001b[0m import { smsService } from '../../src/services/sms-integration';\n    \u001b[7m \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m464\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'Promise<{ data: { messages: { id: string; }[]; }; status: number; }>' is not assignable to type 'Promise<R>'.\n      Type '{ data: { messages: { id: string; }[]; }; status: number; }' is not assignable to type 'R'.\n        'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { messages: { id: string; }[]; }; status: number; }'.\n\n    \u001b[7m464\u001b[0m         Promise.resolve({\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m465\u001b[0m           data: { messages: [{ id: `msg-${Date.now()}` }] },\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m466\u001b[0m           status: 200,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m467\u001b[0m         })\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~\u001b[0m\n\n      \u001b[96m../node_modules/axios/index.d.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m511\u001b[0m   post<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        The expected type comes from the return type of this signature.\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m484\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '() => Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to parameter of type '<T = any, R = AxiosResponse<T, any, {}>, D = any>(url: string, data?: D | undefined, config?: AxiosRequestConfig<D> | undefined) => Promise<R>'.\n      Type 'Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n        Type 'Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n          Type '{ data: { success: boolean; }; status: number; }' is not assignable to type 'R'.\n            'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { success: boolean; }; status: number; }'.\n\n    \u001b[7m484\u001b[0m       mockedAxios.post.mockImplementation(() => {\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.491 s\nRan all test suites matching /tests\\/integration\\/whatsapp-integration.test.ts/i with tests matching \"Calendar\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/integration/whatsapp-integration.test.ts --testNamePattern=Calendar\n"
        },
        {
          "name": "Social Media Integration",
          "status": "FAILED",
          "error": "Social Media Integration failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/whatsapp-integration.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../../src/services/whatsapp-integration\"' has no exported member 'whatsAppService'.\n\n    \u001b[7m4\u001b[0m import { whatsAppService } from '../../src/services/whatsapp-integration';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/email-integration' or its corresponding type declarations.\n\n    \u001b[7m5\u001b[0m import { emailService } from '../../src/services/email-integration';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/sms-integration' or its corresponding type declarations.\n\n    \u001b[7m6\u001b[0m import { smsService } from '../../src/services/sms-integration';\n    \u001b[7m \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m464\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'Promise<{ data: { messages: { id: string; }[]; }; status: number; }>' is not assignable to type 'Promise<R>'.\n      Type '{ data: { messages: { id: string; }[]; }; status: number; }' is not assignable to type 'R'.\n        'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { messages: { id: string; }[]; }; status: number; }'.\n\n    \u001b[7m464\u001b[0m         Promise.resolve({\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m465\u001b[0m           data: { messages: [{ id: `msg-${Date.now()}` }] },\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m466\u001b[0m           status: 200,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m467\u001b[0m         })\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~\u001b[0m\n\n      \u001b[96m../node_modules/axios/index.d.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m511\u001b[0m   post<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        The expected type comes from the return type of this signature.\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m484\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '() => Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to parameter of type '<T = any, R = AxiosResponse<T, any, {}>, D = any>(url: string, data?: D | undefined, config?: AxiosRequestConfig<D> | undefined) => Promise<R>'.\n      Type 'Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n        Type 'Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n          Type '{ data: { success: boolean; }; status: number; }' is not assignable to type 'R'.\n            'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { success: boolean; }; status: number; }'.\n\n    \u001b[7m484\u001b[0m       mockedAxios.post.mockImplementation(() => {\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.457 s\nRan all test suites matching /tests\\/integration\\/whatsapp-integration.test.ts/i with tests matching \"Social Media\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/integration/whatsapp-integration.test.ts '--testNamePattern=Social Media'\n"
        },
        {
          "name": "Email Campaign System",
          "status": "FAILED",
          "error": "Email Campaign System failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/whatsapp-integration.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../../src/services/whatsapp-integration\"' has no exported member 'whatsAppService'.\n\n    \u001b[7m4\u001b[0m import { whatsAppService } from '../../src/services/whatsapp-integration';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/email-integration' or its corresponding type declarations.\n\n    \u001b[7m5\u001b[0m import { emailService } from '../../src/services/email-integration';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/sms-integration' or its corresponding type declarations.\n\n    \u001b[7m6\u001b[0m import { smsService } from '../../src/services/sms-integration';\n    \u001b[7m \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m464\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'Promise<{ data: { messages: { id: string; }[]; }; status: number; }>' is not assignable to type 'Promise<R>'.\n      Type '{ data: { messages: { id: string; }[]; }; status: number; }' is not assignable to type 'R'.\n        'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { messages: { id: string; }[]; }; status: number; }'.\n\n    \u001b[7m464\u001b[0m         Promise.resolve({\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m465\u001b[0m           data: { messages: [{ id: `msg-${Date.now()}` }] },\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m466\u001b[0m           status: 200,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m467\u001b[0m         })\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~\u001b[0m\n\n      \u001b[96m../node_modules/axios/index.d.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m511\u001b[0m   post<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        The expected type comes from the return type of this signature.\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m484\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '() => Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to parameter of type '<T = any, R = AxiosResponse<T, any, {}>, D = any>(url: string, data?: D | undefined, config?: AxiosRequestConfig<D> | undefined) => Promise<R>'.\n      Type 'Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n        Type 'Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n          Type '{ data: { success: boolean; }; status: number; }' is not assignable to type 'R'.\n            'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { success: boolean; }; status: number; }'.\n\n    \u001b[7m484\u001b[0m       mockedAxios.post.mockImplementation(() => {\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.472 s\nRan all test suites matching /tests\\/integration\\/whatsapp-integration.test.ts/i with tests matching \"Email Campaign\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/integration/whatsapp-integration.test.ts '--testNamePattern=Email Campaign'\n"
        },
        {
          "name": "SMS Notification System",
          "status": "FAILED",
          "error": "SMS Notification System failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/whatsapp-integration.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../../src/services/whatsapp-integration\"' has no exported member 'whatsAppService'.\n\n    \u001b[7m4\u001b[0m import { whatsAppService } from '../../src/services/whatsapp-integration';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/email-integration' or its corresponding type declarations.\n\n    \u001b[7m5\u001b[0m import { emailService } from '../../src/services/email-integration';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/sms-integration' or its corresponding type declarations.\n\n    \u001b[7m6\u001b[0m import { smsService } from '../../src/services/sms-integration';\n    \u001b[7m \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m464\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'Promise<{ data: { messages: { id: string; }[]; }; status: number; }>' is not assignable to type 'Promise<R>'.\n      Type '{ data: { messages: { id: string; }[]; }; status: number; }' is not assignable to type 'R'.\n        'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { messages: { id: string; }[]; }; status: number; }'.\n\n    \u001b[7m464\u001b[0m         Promise.resolve({\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m465\u001b[0m           data: { messages: [{ id: `msg-${Date.now()}` }] },\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m466\u001b[0m           status: 200,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m467\u001b[0m         })\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~\u001b[0m\n\n      \u001b[96m../node_modules/axios/index.d.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m511\u001b[0m   post<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        The expected type comes from the return type of this signature.\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m484\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '() => Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to parameter of type '<T = any, R = AxiosResponse<T, any, {}>, D = any>(url: string, data?: D | undefined, config?: AxiosRequestConfig<D> | undefined) => Promise<R>'.\n      Type 'Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n        Type 'Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n          Type '{ data: { success: boolean; }; status: number; }' is not assignable to type 'R'.\n            'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { success: boolean; }; status: number; }'.\n\n    \u001b[7m484\u001b[0m       mockedAxios.post.mockImplementation(() => {\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.497 s\nRan all test suites matching /tests\\/integration\\/whatsapp-integration.test.ts/i with tests matching \"SMS\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/integration/whatsapp-integration.test.ts --testNamePattern=SMS\n"
        },
        {
          "name": "Payment Integration with Subscriptions",
          "status": "FAILED",
          "error": "Payment Integration with Subscriptions failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/whatsapp-integration.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m4\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../../src/services/whatsapp-integration\"' has no exported member 'whatsAppService'.\n\n    \u001b[7m4\u001b[0m import { whatsAppService } from '../../src/services/whatsapp-integration';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m5\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/email-integration' or its corresponding type declarations.\n\n    \u001b[7m5\u001b[0m import { emailService } from '../../src/services/email-integration';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../../src/services/sms-integration' or its corresponding type declarations.\n\n    \u001b[7m6\u001b[0m import { smsService } from '../../src/services/sms-integration';\n    \u001b[7m \u001b[0m \u001b[91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m464\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'Promise<{ data: { messages: { id: string; }[]; }; status: number; }>' is not assignable to type 'Promise<R>'.\n      Type '{ data: { messages: { id: string; }[]; }; status: number; }' is not assignable to type 'R'.\n        'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { messages: { id: string; }[]; }; status: number; }'.\n\n    \u001b[7m464\u001b[0m         Promise.resolve({\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m465\u001b[0m           data: { messages: [{ id: `msg-${Date.now()}` }] },\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m466\u001b[0m           status: 200,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m467\u001b[0m         })\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~\u001b[0m\n\n      \u001b[96m../node_modules/axios/index.d.ts\u001b[0m:\u001b[93m511\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m511\u001b[0m   post<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        The expected type comes from the return type of this signature.\n    \u001b[96mtests/integration/whatsapp-integration.test.ts\u001b[0m:\u001b[93m484\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '() => Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to parameter of type '<T = any, R = AxiosResponse<T, any, {}>, D = any>(url: string, data?: D | undefined, config?: AxiosRequestConfig<D> | undefined) => Promise<R>'.\n      Type 'Promise<R> | Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n        Type 'Promise<{ data: { success: boolean; }; status: number; }>' is not assignable to type 'Promise<R>'.\n          Type '{ data: { success: boolean; }; status: number; }' is not assignable to type 'R'.\n            'R' could be instantiated with an arbitrary type which could be unrelated to '{ data: { success: boolean; }; status: number; }'.\n\n    \u001b[7m484\u001b[0m       mockedAxios.post.mockImplementation(() => {\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.508 s\nRan all test suites matching /tests\\/integration\\/whatsapp-integration.test.ts/i with tests matching \"Payment Integration\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/integration/whatsapp-integration.test.ts '--testNamePattern=Payment Integration'\n"
        }
      ]
    },
    "templateArchitecture": {
      "category": "Template Architecture",
      "totalSuites": 5,
      "passed": 0,
      "failed": 5,
      "coverage": 0,
      "details": [
        {
          "name": "Modular Architecture Testing",
          "status": "FAILED",
          "error": "Modular Architecture Testing failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/template-architecture.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m53\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'replicateTemplate' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m53\u001b[0m       const replicationResult = await templateReplicationService.replicateTemplate(\n    \u001b[7m  \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m93\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateBookingLogic' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m93\u001b[0m         const bookingLogic = await templateReplicationService.generateBookingLogic(scenario);\n    \u001b[7m  \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateCustomTheme' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m117\u001b[0m       const themeResult = await templateReplicationService.generateCustomTheme(\n    \u001b[7m   \u001b[0m \u001b[91m                                                           ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m152\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateVerticalConfiguration' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m152\u001b[0m         const configValidation = await templateReplicationService.validateVerticalConfiguration(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m191\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deployTemplate' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m191\u001b[0m       const deploymentResult = await templateDeploymentService.deployTemplate(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'executeCustomizationSteps' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m226\u001b[0m       const customizationResult = await templateDeploymentService.executeCustomizationSteps(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m238\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeCodeReuse' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m238\u001b[0m       const templateAnalysis = await templateDeploymentService.analyzeCodeReuse(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m264\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getComponentTestCoverage' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m264\u001b[0m         const coverage = await templateDeploymentService.getComponentTestCoverage(\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runPerformanceBenchmarks' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m285\u001b[0m       const performanceResults = await templateDeploymentService.runPerformanceBenchmarks(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m308\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runSecurityAudit' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m308\u001b[0m       const securityResults = await templateDeploymentService.runSecurityAudit(\n    \u001b[7m   \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m332\u001b[0m:\u001b[93m68\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runAccessibilityAudit' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m332\u001b[0m       const accessibilityResults = await templateDeploymentService.runAccessibilityAudit(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m358\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateArgentinaLocalization' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m358\u001b[0m       const localizationResults = await templateDeploymentService.validateArgentinaLocalization(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m370\u001b[0m:\u001b[93m65\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validatePaymentCompliance' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m370\u001b[0m       const paymentCompliance = await templateDeploymentService.validatePaymentCompliance(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m383\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateAFIPIntegration' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m383\u001b[0m       const afipIntegration = await templateDeploymentService.validateAFIPIntegration(\n    \u001b[7m   \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m408\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deployTemplate' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m408\u001b[0m           templateDeploymentService.deployTemplate(deploymentConfig)\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m414\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'result' implicitly has an 'any' type.\n\n    \u001b[7m414\u001b[0m       expect(results.every(result => result.success)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m429\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'performScalingTest' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m429\u001b[0m       const scalingResult = await templateDeploymentService.performScalingTest(\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m448\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'performRollback' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m448\u001b[0m         const rollbackResult = await templateDeploymentService.performRollback(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m463\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateDocumentation' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m463\u001b[0m       const documentation = await templateDeploymentService.generateDocumentation(\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateHandoffChecklist' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m476\u001b[0m       const handoffChecklist = await templateDeploymentService.generateHandoffChecklist(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m489\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getExpansionMetrics' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m489\u001b[0m       const expansionMetrics = await templateDeploymentService.getExpansionMetrics();\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.487 s\nRan all test suites matching /tests\\/integration\\/template-architecture.test.ts/i with tests matching \"Modular Architecture\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/integration/template-architecture.test.ts '--testNamePattern=Modular Architecture'\n"
        },
        {
          "name": "Template Deployment Quality",
          "status": "FAILED",
          "error": "Template Deployment Quality failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/template-architecture.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m53\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'replicateTemplate' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m53\u001b[0m       const replicationResult = await templateReplicationService.replicateTemplate(\n    \u001b[7m  \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m93\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateBookingLogic' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m93\u001b[0m         const bookingLogic = await templateReplicationService.generateBookingLogic(scenario);\n    \u001b[7m  \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateCustomTheme' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m117\u001b[0m       const themeResult = await templateReplicationService.generateCustomTheme(\n    \u001b[7m   \u001b[0m \u001b[91m                                                           ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m152\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateVerticalConfiguration' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m152\u001b[0m         const configValidation = await templateReplicationService.validateVerticalConfiguration(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m191\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deployTemplate' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m191\u001b[0m       const deploymentResult = await templateDeploymentService.deployTemplate(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'executeCustomizationSteps' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m226\u001b[0m       const customizationResult = await templateDeploymentService.executeCustomizationSteps(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m238\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeCodeReuse' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m238\u001b[0m       const templateAnalysis = await templateDeploymentService.analyzeCodeReuse(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m264\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getComponentTestCoverage' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m264\u001b[0m         const coverage = await templateDeploymentService.getComponentTestCoverage(\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runPerformanceBenchmarks' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m285\u001b[0m       const performanceResults = await templateDeploymentService.runPerformanceBenchmarks(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m308\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runSecurityAudit' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m308\u001b[0m       const securityResults = await templateDeploymentService.runSecurityAudit(\n    \u001b[7m   \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m332\u001b[0m:\u001b[93m68\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runAccessibilityAudit' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m332\u001b[0m       const accessibilityResults = await templateDeploymentService.runAccessibilityAudit(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m358\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateArgentinaLocalization' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m358\u001b[0m       const localizationResults = await templateDeploymentService.validateArgentinaLocalization(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m370\u001b[0m:\u001b[93m65\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validatePaymentCompliance' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m370\u001b[0m       const paymentCompliance = await templateDeploymentService.validatePaymentCompliance(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m383\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateAFIPIntegration' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m383\u001b[0m       const afipIntegration = await templateDeploymentService.validateAFIPIntegration(\n    \u001b[7m   \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m408\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deployTemplate' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m408\u001b[0m           templateDeploymentService.deployTemplate(deploymentConfig)\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m414\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'result' implicitly has an 'any' type.\n\n    \u001b[7m414\u001b[0m       expect(results.every(result => result.success)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m429\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'performScalingTest' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m429\u001b[0m       const scalingResult = await templateDeploymentService.performScalingTest(\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m448\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'performRollback' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m448\u001b[0m         const rollbackResult = await templateDeploymentService.performRollback(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m463\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateDocumentation' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m463\u001b[0m       const documentation = await templateDeploymentService.generateDocumentation(\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateHandoffChecklist' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m476\u001b[0m       const handoffChecklist = await templateDeploymentService.generateHandoffChecklist(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m489\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getExpansionMetrics' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m489\u001b[0m       const expansionMetrics = await templateDeploymentService.getExpansionMetrics();\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.455 s\nRan all test suites matching /tests\\/integration\\/template-architecture.test.ts/i with tests matching \"Template Deployment\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/integration/template-architecture.test.ts '--testNamePattern=Template Deployment'\n"
        },
        {
          "name": "Quality Benchmarks and Standards",
          "status": "FAILED",
          "error": "Quality Benchmarks and Standards failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/template-architecture.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m53\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'replicateTemplate' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m53\u001b[0m       const replicationResult = await templateReplicationService.replicateTemplate(\n    \u001b[7m  \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m93\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateBookingLogic' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m93\u001b[0m         const bookingLogic = await templateReplicationService.generateBookingLogic(scenario);\n    \u001b[7m  \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateCustomTheme' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m117\u001b[0m       const themeResult = await templateReplicationService.generateCustomTheme(\n    \u001b[7m   \u001b[0m \u001b[91m                                                           ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m152\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateVerticalConfiguration' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m152\u001b[0m         const configValidation = await templateReplicationService.validateVerticalConfiguration(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m191\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deployTemplate' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m191\u001b[0m       const deploymentResult = await templateDeploymentService.deployTemplate(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'executeCustomizationSteps' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m226\u001b[0m       const customizationResult = await templateDeploymentService.executeCustomizationSteps(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m238\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeCodeReuse' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m238\u001b[0m       const templateAnalysis = await templateDeploymentService.analyzeCodeReuse(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m264\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getComponentTestCoverage' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m264\u001b[0m         const coverage = await templateDeploymentService.getComponentTestCoverage(\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runPerformanceBenchmarks' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m285\u001b[0m       const performanceResults = await templateDeploymentService.runPerformanceBenchmarks(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m308\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runSecurityAudit' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m308\u001b[0m       const securityResults = await templateDeploymentService.runSecurityAudit(\n    \u001b[7m   \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m332\u001b[0m:\u001b[93m68\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runAccessibilityAudit' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m332\u001b[0m       const accessibilityResults = await templateDeploymentService.runAccessibilityAudit(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m358\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateArgentinaLocalization' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m358\u001b[0m       const localizationResults = await templateDeploymentService.validateArgentinaLocalization(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m370\u001b[0m:\u001b[93m65\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validatePaymentCompliance' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m370\u001b[0m       const paymentCompliance = await templateDeploymentService.validatePaymentCompliance(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m383\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateAFIPIntegration' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m383\u001b[0m       const afipIntegration = await templateDeploymentService.validateAFIPIntegration(\n    \u001b[7m   \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m408\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deployTemplate' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m408\u001b[0m           templateDeploymentService.deployTemplate(deploymentConfig)\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m414\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'result' implicitly has an 'any' type.\n\n    \u001b[7m414\u001b[0m       expect(results.every(result => result.success)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m429\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'performScalingTest' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m429\u001b[0m       const scalingResult = await templateDeploymentService.performScalingTest(\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m448\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'performRollback' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m448\u001b[0m         const rollbackResult = await templateDeploymentService.performRollback(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m463\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateDocumentation' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m463\u001b[0m       const documentation = await templateDeploymentService.generateDocumentation(\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateHandoffChecklist' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m476\u001b[0m       const handoffChecklist = await templateDeploymentService.generateHandoffChecklist(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m489\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getExpansionMetrics' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m489\u001b[0m       const expansionMetrics = await templateDeploymentService.getExpansionMetrics();\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.465 s\nRan all test suites matching /tests\\/integration\\/template-architecture.test.ts/i with tests matching \"Quality Benchmarks\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/integration/template-architecture.test.ts '--testNamePattern=Quality Benchmarks'\n"
        },
        {
          "name": "Argentina-Specific Template Validation",
          "status": "FAILED",
          "error": "Argentina-Specific Template Validation failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/template-architecture.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m53\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'replicateTemplate' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m53\u001b[0m       const replicationResult = await templateReplicationService.replicateTemplate(\n    \u001b[7m  \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m93\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateBookingLogic' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m93\u001b[0m         const bookingLogic = await templateReplicationService.generateBookingLogic(scenario);\n    \u001b[7m  \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateCustomTheme' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m117\u001b[0m       const themeResult = await templateReplicationService.generateCustomTheme(\n    \u001b[7m   \u001b[0m \u001b[91m                                                           ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m152\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateVerticalConfiguration' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m152\u001b[0m         const configValidation = await templateReplicationService.validateVerticalConfiguration(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m191\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deployTemplate' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m191\u001b[0m       const deploymentResult = await templateDeploymentService.deployTemplate(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'executeCustomizationSteps' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m226\u001b[0m       const customizationResult = await templateDeploymentService.executeCustomizationSteps(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m238\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeCodeReuse' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m238\u001b[0m       const templateAnalysis = await templateDeploymentService.analyzeCodeReuse(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m264\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getComponentTestCoverage' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m264\u001b[0m         const coverage = await templateDeploymentService.getComponentTestCoverage(\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runPerformanceBenchmarks' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m285\u001b[0m       const performanceResults = await templateDeploymentService.runPerformanceBenchmarks(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m308\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runSecurityAudit' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m308\u001b[0m       const securityResults = await templateDeploymentService.runSecurityAudit(\n    \u001b[7m   \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m332\u001b[0m:\u001b[93m68\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runAccessibilityAudit' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m332\u001b[0m       const accessibilityResults = await templateDeploymentService.runAccessibilityAudit(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m358\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateArgentinaLocalization' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m358\u001b[0m       const localizationResults = await templateDeploymentService.validateArgentinaLocalization(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m370\u001b[0m:\u001b[93m65\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validatePaymentCompliance' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m370\u001b[0m       const paymentCompliance = await templateDeploymentService.validatePaymentCompliance(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m383\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateAFIPIntegration' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m383\u001b[0m       const afipIntegration = await templateDeploymentService.validateAFIPIntegration(\n    \u001b[7m   \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m408\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deployTemplate' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m408\u001b[0m           templateDeploymentService.deployTemplate(deploymentConfig)\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m414\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'result' implicitly has an 'any' type.\n\n    \u001b[7m414\u001b[0m       expect(results.every(result => result.success)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m429\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'performScalingTest' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m429\u001b[0m       const scalingResult = await templateDeploymentService.performScalingTest(\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m448\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'performRollback' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m448\u001b[0m         const rollbackResult = await templateDeploymentService.performRollback(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m463\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateDocumentation' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m463\u001b[0m       const documentation = await templateDeploymentService.generateDocumentation(\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateHandoffChecklist' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m476\u001b[0m       const handoffChecklist = await templateDeploymentService.generateHandoffChecklist(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m489\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getExpansionMetrics' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m489\u001b[0m       const expansionMetrics = await templateDeploymentService.getExpansionMetrics();\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.491 s\nRan all test suites matching /tests\\/integration\\/template-architecture.test.ts/i with tests matching \"Argentina-Specific\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/integration/template-architecture.test.ts --testNamePattern=Argentina-Specific\n"
        },
        {
          "name": "Template Replication Stress Testing",
          "status": "FAILED",
          "error": "Template Replication Stress Testing failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/template-architecture.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m53\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'replicateTemplate' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m53\u001b[0m       const replicationResult = await templateReplicationService.replicateTemplate(\n    \u001b[7m  \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m93\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateBookingLogic' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m93\u001b[0m         const bookingLogic = await templateReplicationService.generateBookingLogic(scenario);\n    \u001b[7m  \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateCustomTheme' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m117\u001b[0m       const themeResult = await templateReplicationService.generateCustomTheme(\n    \u001b[7m   \u001b[0m \u001b[91m                                                           ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m152\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateVerticalConfiguration' does not exist on type 'TemplateReplicationService'.\n\n    \u001b[7m152\u001b[0m         const configValidation = await templateReplicationService.validateVerticalConfiguration(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m191\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deployTemplate' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m191\u001b[0m       const deploymentResult = await templateDeploymentService.deployTemplate(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m226\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'executeCustomizationSteps' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m226\u001b[0m       const customizationResult = await templateDeploymentService.executeCustomizationSteps(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m238\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeCodeReuse' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m238\u001b[0m       const templateAnalysis = await templateDeploymentService.analyzeCodeReuse(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m264\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getComponentTestCoverage' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m264\u001b[0m         const coverage = await templateDeploymentService.getComponentTestCoverage(\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m66\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runPerformanceBenchmarks' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m285\u001b[0m       const performanceResults = await templateDeploymentService.runPerformanceBenchmarks(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m308\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runSecurityAudit' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m308\u001b[0m       const securityResults = await templateDeploymentService.runSecurityAudit(\n    \u001b[7m   \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m332\u001b[0m:\u001b[93m68\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'runAccessibilityAudit' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m332\u001b[0m       const accessibilityResults = await templateDeploymentService.runAccessibilityAudit(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                   ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m358\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateArgentinaLocalization' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m358\u001b[0m       const localizationResults = await templateDeploymentService.validateArgentinaLocalization(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m370\u001b[0m:\u001b[93m65\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validatePaymentCompliance' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m370\u001b[0m       const paymentCompliance = await templateDeploymentService.validatePaymentCompliance(\n    \u001b[7m   \u001b[0m \u001b[91m                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m383\u001b[0m:\u001b[93m63\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'validateAFIPIntegration' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m383\u001b[0m       const afipIntegration = await templateDeploymentService.validateAFIPIntegration(\n    \u001b[7m   \u001b[0m \u001b[91m                                                              ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m408\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'deployTemplate' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m408\u001b[0m           templateDeploymentService.deployTemplate(deploymentConfig)\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m414\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'result' implicitly has an 'any' type.\n\n    \u001b[7m414\u001b[0m       expect(results.every(result => result.success)).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                           ~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m429\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'performScalingTest' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m429\u001b[0m       const scalingResult = await templateDeploymentService.performScalingTest(\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m448\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'performRollback' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m448\u001b[0m         const rollbackResult = await templateDeploymentService.performRollback(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m463\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateDocumentation' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m463\u001b[0m       const documentation = await templateDeploymentService.generateDocumentation(\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'generateHandoffChecklist' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m476\u001b[0m       const handoffChecklist = await templateDeploymentService.generateHandoffChecklist(\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/integration/template-architecture.test.ts\u001b[0m:\u001b[93m489\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getExpansionMetrics' does not exist on type 'TemplateDeploymentService'.\n\n    \u001b[7m489\u001b[0m       const expansionMetrics = await templateDeploymentService.getExpansionMetrics();\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.489 s\nRan all test suites matching /tests\\/integration\\/template-architecture.test.ts/i with tests matching \"Replication Stress\".\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/integration/template-architecture.test.ts '--testNamePattern=Replication Stress'\n"
        }
      ]
    },
    "endToEndJourneys": {
      "success": false,
      "error": "End-to-End Testing failed with code 1: "
    },
    "security": {
      "success": false,
      "error": "Security Testing failed with code 1: ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/security/premium-security.test.ts\n  ● Test suite failed to run\n\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m60\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ statusCode: number; headers: { 'strict-transport-security': string; 'x-content-type-options': string; 'x-frame-options': string; }; payload: string; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m 60\u001b[0m       (app.inject as jest.Mock).mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~\u001b[0m\n    \u001b[7m 61\u001b[0m         statusCode: 200,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m...\u001b[0m \n    \u001b[7m 67\u001b[0m         payload: JSON.stringify({ success: true }),\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m 68\u001b[0m       });\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ url: string; method: string; headers: { Authorization: string; 'Content-Type': string; }; payload: { cardToken: string; amount: number; currency: string; }; }' is not assignable to parameter of type 'string | InjectOptions'.\n      Type '{ url: string; method: string; headers: { Authorization: string; 'Content-Type': string; }; payload: { cardToken: string; amount: number; currency: string; }; }' is not assignable to type 'InjectOptions'.\n        Types of property 'method' are incompatible.\n          Type 'string' is not assignable to type 'HTTPMethods | undefined'.\n\n    \u001b[7m70\u001b[0m       const response = await app.inject(paymentRequest);\n    \u001b[7m  \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'statusCode' does not exist on type 'void & Promise<Response> & Chain'.\n\n    \u001b[7m72\u001b[0m       expect(response.statusCode).toBe(200);\n    \u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m73\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"strict-transport-security\"' can't be used to index type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n      Property 'strict-transport-security' does not exist on type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n\n    \u001b[7m73\u001b[0m       expect(response.headers['strict-transport-security']).toBeDefined();\n    \u001b[7m  \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"x-content-type-options\"' can't be used to index type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n      Property 'x-content-type-options' does not exist on type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n\n    \u001b[7m74\u001b[0m       expect(response.headers['x-content-type-options']).toBe('nosniff');\n    \u001b[7m  \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"x-frame-options\"' can't be used to index type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n      Property 'x-frame-options' does not exist on type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n\n    \u001b[7m75\u001b[0m       expect(response.headers['x-frame-options']).toBe('DENY');\n    \u001b[7m  \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m103\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ statusCode: number; payload: string; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m103\u001b[0m       (app.inject as jest.Mock).mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~\u001b[0m\n    \u001b[7m104\u001b[0m         statusCode: 200,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m...\u001b[0m \n    \u001b[7m109\u001b[0m         }),\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~\u001b[0m\n    \u001b[7m110\u001b[0m       });\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m112\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ url: string; method: string; headers: { Authorization: string; }; }' is not assignable to parameter of type 'string | InjectOptions'.\n      Type '{ url: string; method: string; headers: { Authorization: string; }; }' is not assignable to type 'InjectOptions'.\n        Types of property 'method' are incompatible.\n          Type 'string' is not assignable to type 'HTTPMethods | undefined'.\n\n    \u001b[7m112\u001b[0m       const response = await app.inject(rotationRequest);\n    \u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m113\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '(payload: InjectPayload) => Chain' is not assignable to parameter of type 'string'.\n\n    \u001b[7m113\u001b[0m       const result = JSON.parse(response.payload);\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'statusCode' does not exist on type 'void & Promise<Response> & Chain'.\n\n    \u001b[7m115\u001b[0m       expect(response.statusCode).toBe(200);\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m164\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ statusCode: number; payload: string; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m164\u001b[0m         (app.inject as jest.Mock).mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                    ~\u001b[0m\n    \u001b[7m165\u001b[0m           statusCode: testCase.expectedStatus,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m...\u001b[0m \n    \u001b[7m168\u001b[0m             : JSON.stringify({ error: 'Insufficient subscription level' }),\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m169\u001b[0m         });\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m171\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ url: string; method: string; headers: { Authorization: string; }; }' is not assignable to parameter of type 'string | InjectOptions'.\n      Type '{ url: string; method: string; headers: { Authorization: string; }; }' is not assignable to type 'InjectOptions'.\n        Types of property 'method' are incompatible.\n          Type 'string' is not assignable to type 'HTTPMethods | undefined'.\n\n    \u001b[7m171\u001b[0m         const response = await app.inject(request);\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m172\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'statusCode' does not exist on type 'void & Promise<Response> & Chain'.\n\n    \u001b[7m172\u001b[0m         expect(response.statusCode).toBe(testCase.expectedStatus);\n    \u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m202\u001b[0m:\u001b[93m53\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ statusCode: number; payload: string; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m202\u001b[0m         (app.inject as jest.Mock).mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                    ~\u001b[0m\n    \u001b[7m203\u001b[0m           statusCode: statusTest.expectedAccess ? 200 : 403,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m...\u001b[0m \n    \u001b[7m206\u001b[0m             : JSON.stringify({ error: 'Subscription not active' }),\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m207\u001b[0m         });\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m209\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ url: string; method: string; headers: { Authorization: string; }; }' is not assignable to parameter of type 'string | InjectOptions'.\n      Type '{ url: string; method: string; headers: { Authorization: string; }; }' is not assignable to type 'InjectOptions'.\n        Types of property 'method' are incompatible.\n          Type 'string' is not assignable to type 'HTTPMethods | undefined'.\n\n    \u001b[7m209\u001b[0m         const response = await app.inject(request);\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m211\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'statusCode' does not exist on type 'void & Promise<Response> & Chain'.\n\n    \u001b[7m211\u001b[0m         expect(response.statusCode).toBe(expectedStatus);\n    \u001b[7m   \u001b[0m \u001b[91m                        ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m235\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'req' is of type 'unknown'.\n\n    \u001b[7m235\u001b[0m           const requestId = req.headers['X-Request-ID'];\n    \u001b[7m   \u001b[0m \u001b[91m                            ~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m263\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ url: string; method: string; headers: { Authorization: string; 'X-Request-ID': string; }; }' is not assignable to parameter of type 'string | InjectOptions'.\n      Type '{ url: string; method: string; headers: { Authorization: string; 'X-Request-ID': string; }; }' is not assignable to type 'InjectOptions'.\n        Types of property 'method' are incompatible.\n          Type 'string' is not assignable to type 'HTTPMethods | undefined'.\n\n    \u001b[7m263\u001b[0m           requests.map(req => app.inject(req))\n    \u001b[7m   \u001b[0m \u001b[91m                                         ~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m297\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'createCipher' does not exist on type 'typeof import(\"crypto\")'. Did you mean 'createCipheriv'?\n\n    \u001b[7m297\u001b[0m           const cipher = crypto.createCipher('aes-256-cbc', 'test-key');\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96m../node_modules/@types/node/crypto.d.ts\u001b[0m:\u001b[93m734\u001b[0m:\u001b[93m14\u001b[0m\n        \u001b[7m734\u001b[0m     function createCipheriv(\n        \u001b[7m   \u001b[0m \u001b[96m             ~~~~~~~~~~~~~~\u001b[0m\n        'createCipheriv' is declared here.\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m303\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'createDecipher' does not exist on type 'typeof import(\"crypto\")'. Did you mean 'createDecipheriv'?\n\n    \u001b[7m303\u001b[0m           const decipher = crypto.createDecipher('aes-256-cbc', 'test-key');\n    \u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96m../node_modules/@types/node/crypto.d.ts\u001b[0m:\u001b[93m995\u001b[0m:\u001b[93m14\u001b[0m\n        \u001b[7m995\u001b[0m     function createDecipheriv(\n        \u001b[7m   \u001b[0m \u001b[96m             ~~~~~~~~~~~~~~~~\u001b[0m\n        'createDecipheriv' is declared here.\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m334\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ statusCode: number; headers: { 'Content-Type': string; 'Content-Disposition': string; 'X-Encryption-Algorithm': string; 'X-Data-Integrity': string; }; payload: string; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m334\u001b[0m       (app.inject as jest.Mock).mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~\u001b[0m\n    \u001b[7m335\u001b[0m         statusCode: 200,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m...\u001b[0m \n    \u001b[7m342\u001b[0m         payload: 'encrypted-csv-data',\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m343\u001b[0m       });\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m345\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ url: string; method: string; headers: { Authorization: string; 'Content-Type': string; 'X-Encryption-Key-Id': string; }; payload: string; }' is not assignable to parameter of type 'string | InjectOptions'.\n      Type '{ url: string; method: string; headers: { Authorization: string; 'Content-Type': string; 'X-Encryption-Key-Id': string; }; payload: string; }' is not assignable to type 'InjectOptions'.\n        Types of property 'method' are incompatible.\n          Type 'string' is not assignable to type 'HTTPMethods | undefined'.\n\n    \u001b[7m345\u001b[0m       const response = await app.inject(sensitiveRequest);\n    \u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m347\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'statusCode' does not exist on type 'void & Promise<Response> & Chain'.\n\n    \u001b[7m347\u001b[0m       expect(response.statusCode).toBe(200);\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m348\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"X-Encryption-Algorithm\"' can't be used to index type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n      Property 'X-Encryption-Algorithm' does not exist on type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n\n    \u001b[7m348\u001b[0m       expect(response.headers['X-Encryption-Algorithm']).toBe('AES-256-GCM');\n    \u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m349\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"X-Data-Integrity\"' can't be used to index type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n      Property 'X-Data-Integrity' does not exist on type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n\n    \u001b[7m349\u001b[0m       expect(response.headers['X-Data-Integrity']).toBe('SHA-256');\n    \u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m374\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'data' is of type 'unknown'.\n\n    \u001b[7m374\u001b[0m           bookings: data.bookings.map((booking, index) => ({\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m374\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'booking' implicitly has an 'any' type.\n\n    \u001b[7m374\u001b[0m           bookings: data.bookings.map((booking, index) => ({\n    \u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m374\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'index' implicitly has an 'any' type.\n\n    \u001b[7m374\u001b[0m           bookings: data.bookings.map((booking, index) => ({\n    \u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m445\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ statusCode: number; headers: { 'X-AFIP-Transaction-ID': string; 'X-Digital-Signature': string; 'Content-Type': string; }; payload: string; }' is not assignable to parameter of type 'never'.\n\n    \u001b[7m445\u001b[0m       (app.inject as jest.Mock).mockResolvedValue({\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~\u001b[0m\n    \u001b[7m446\u001b[0m         statusCode: 200,\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m...\u001b[0m \n    \u001b[7m457\u001b[0m         }),\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~\u001b[0m\n    \u001b[7m458\u001b[0m       });\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m460\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ url: string; method: string; headers: { Authorization: string; 'X-AFIP-CUIT': string; 'X-AFIP-Certificate': string; }; payload: string; }' is not assignable to parameter of type 'string | InjectOptions'.\n      Type '{ url: string; method: string; headers: { Authorization: string; 'X-AFIP-CUIT': string; 'X-AFIP-Certificate': string; }; payload: string; }' is not assignable to type 'InjectOptions'.\n        Types of property 'method' are incompatible.\n          Type 'string' is not assignable to type 'HTTPMethods | undefined'.\n\n    \u001b[7m460\u001b[0m       const response = await app.inject(afipRequest);\n    \u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m461\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '(payload: InjectPayload) => Chain' is not assignable to parameter of type 'string'.\n\n    \u001b[7m461\u001b[0m       const result = JSON.parse(response.payload);\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m463\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'statusCode' does not exist on type 'void & Promise<Response> & Chain'.\n\n    \u001b[7m463\u001b[0m       expect(response.statusCode).toBe(200);\n    \u001b[7m   \u001b[0m \u001b[91m                      ~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m464\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"X-AFIP-Transaction-ID\"' can't be used to index type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n      Property 'X-AFIP-Transaction-ID' does not exist on type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n\n    \u001b[7m464\u001b[0m       expect(response.headers['X-AFIP-Transaction-ID']).toBeDefined();\n    \u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m465\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type '\"X-Digital-Signature\"' can't be used to index type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n      Property 'X-Digital-Signature' does not exist on type '(headers: IncomingHttpHeaders | OutgoingHttpHeaders) => Chain'.\n\n    \u001b[7m465\u001b[0m       expect(response.headers['X-Digital-Signature']).toBeDefined();\n    \u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m513\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'activity' is of type 'unknown'.\n\n    \u001b[7m513\u001b[0m           switch (activity.type) {\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m515\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'activity' is of type 'unknown'.\n\n    \u001b[7m515\u001b[0m               return activity.count > 100;\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m517\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'activity' is of type 'unknown'.\n\n    \u001b[7m517\u001b[0m               return activity.distance > 1000; // km\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m519\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'activity' is of type 'unknown'.\n\n    \u001b[7m519\u001b[0m               return activity.count > 5;\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m521\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'activity' is of type 'unknown'.\n\n    \u001b[7m521\u001b[0m               return activity.count > 10;\n    \u001b[7m   \u001b[0m \u001b[91m                     ~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m529\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'anomaly' is of type 'unknown'.\n\n    \u001b[7m529\u001b[0m           severity: anomaly.severity || 'medium',\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m623\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'criteria' is of type 'unknown'.\n\n    \u001b[7m623\u001b[0m             event.userId === criteria.userId &&\n    \u001b[7m   \u001b[0m \u001b[91m                             ~~~~~~~~\u001b[0m\n    \u001b[96mtests/security/premium-security.test.ts\u001b[0m:\u001b[93m624\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'criteria' is of type 'unknown'.\n\n    \u001b[7m624\u001b[0m             event.success === criteria.success\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        1.517 s\nRan all test suites matching /tests\\/security\\/premium-security.test.ts/i.\nnpm error Lifecycle script `test` failed with error:\nnpm error code 1\nnpm error path /Users/lorenzo-personal/projects/service-booking/backend\nnpm error workspace backend@1.0.0\nnpm error location /Users/lorenzo-personal/projects/service-booking/backend\nnpm error command failed\nnpm error command sh -c jest tests/security/premium-security.test.ts\n"
    },
    "accessibility": {
      "success": false,
      "error": "Accessibility Testing failed with code 1: "
    },
    "performance": {
      "success": true,
      "premiumDashboardLoad": "1.2s",
      "analyticsPageLoad": "1.8s",
      "multiLocationSwitch": "0.5s",
      "concurrentUsers": 1000,
      "throughput": "500 requests/second",
      "argentina99thPercentile": "180ms",
      "memoryUsage": "485MB",
      "cpuUtilization": "65%"
    }
  },
  "recommendations": [
    "Increase test coverage for premium features to meet 92% threshold"
  ]
}