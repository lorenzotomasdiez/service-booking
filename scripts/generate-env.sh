#!/bin/bash
# ============================================================================
# Generate .env files with dummy data for local development
# ============================================================================
# This script creates all necessary .env files with sensible defaults
# for local Docker development
# ============================================================================

set -e

# Color codes
GREEN='\033[0;32m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
RESET='\033[0m'

# Symbols
CHECK="✓"
CROSS="✗"
ARROW="→"

echo ""
echo -e "${CYAN}[${ARROW}]${RESET} Generating .env files for local development..."
echo ""

# ============================================================================
# ROOT .ENV
# ============================================================================
if [ ! -f .env ]; then
    echo -e "${CYAN}[${ARROW}]${RESET} Creating root .env file..."
    cat > .env << 'EOF'
# BarberPro Local Development Environment
# Auto-generated by scripts/generate-env.sh
NODE_ENV=development

# Database
POSTGRES_DB=barberpro_dev
POSTGRES_USER=barberpro
POSTGRES_PASSWORD=barberpro_dev_password
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
DATABASE_URL=postgresql://barberpro:barberpro_dev_password@postgres:5432/barberpro_dev

# Redis
REDIS_URL=redis://redis:6379
REDIS_HOST=redis
REDIS_PORT=6379

# Backend
BACKEND_PORT=3000
BACKEND_URL=http://localhost:3000
API_BASE_URL=http://localhost:3000
JWT_SECRET=dev_jwt_secret_change_in_production_minimum_32_characters
JWT_EXPIRES_IN=7d
LOG_LEVEL=debug

# Frontend
FRONTEND_URL=http://localhost:5173
APP_URL=http://localhost:5173

# CORS
CORS_ORIGIN=http://localhost:5173,http://localhost:3000,http://frontend:5173,http://backend:3000

# Argentina Configuration
TIMEZONE=America/Argentina/Buenos_Aires
LOCALE=es-AR
CURRENCY=ARS
COUNTRY_CODE=AR
PHONE_COUNTRY_CODE=+54

# Admin Tools
PGADMIN_DEFAULT_EMAIL=admin@barberpro.com
PGADMIN_DEFAULT_PASSWORD=admin
REDIS_COMMANDER_USER=admin
REDIS_COMMANDER_PASSWORD=admin

# Security (Development only)
APP_DEBUG=true
ENABLE_SWAGGER=true
BCRYPT_SALT_ROUNDS=10

# Rate Limiting (Lenient for development)
RATE_LIMIT_MAX_REQUESTS=1000
RATE_LIMIT_WINDOW_MS=900000
EOF
    echo -e "${GREEN}[${CHECK}]${RESET} Created .env"
else
    echo -e "${YELLOW}[!]${RESET} .env already exists, skipping..."
fi

# ============================================================================
# BACKEND .ENV
# ============================================================================
if [ ! -f backend/.env ]; then
    echo -e "${CYAN}[${ARROW}]${RESET} Creating backend/.env file..."
    cat > backend/.env << 'EOF'
# Backend Environment Configuration
# Auto-generated by scripts/generate-env.sh
NODE_ENV=development

# Database
DATABASE_URL=postgresql://barberpro:barberpro_dev_password@postgres:5432/barberpro_dev

# Redis
REDIS_URL=redis://redis:6379

# Server
PORT=3000
LOG_LEVEL=debug
LOG_PRETTY=true

# JWT
JWT_SECRET=dev_jwt_secret_change_in_production_minimum_32_characters
JWT_EXPIRES_IN=7d
JWT_REFRESH_EXPIRES_IN=30d

# CORS
CORS_ORIGIN=http://localhost:5173,http://localhost:3000,http://frontend:5173,http://backend:3000
CORS_CREDENTIALS=true

# Argentina
TIMEZONE=America/Argentina/Buenos_Aires
LOCALE=es-AR
CURRENCY=ARS

# Security
APP_DEBUG=true
ENABLE_SWAGGER=true
BCRYPT_SALT_ROUNDS=10
SESSION_SECRET=dev_session_secret_change_in_production

# Rate Limiting
RATE_LIMIT_MAX_REQUESTS=1000
RATE_LIMIT_WINDOW_MS=900000
EOF
    echo -e "${GREEN}[${CHECK}]${RESET} Created backend/.env"
else
    echo -e "${YELLOW}[!]${RESET} backend/.env already exists, skipping..."
fi

# ============================================================================
# FRONTEND .ENV
# ============================================================================
if [ ! -f frontend/.env ]; then
    echo -e "${CYAN}[${ARROW}]${RESET} Creating frontend/.env file..."
    cat > frontend/.env << 'EOF'
# Frontend Environment Configuration
# Auto-generated by scripts/generate-env.sh
NODE_ENV=development

# API URLs (browser connects to localhost)
VITE_API_URL=http://localhost:3000
VITE_BACKEND_URL=http://localhost:3000
VITE_WS_URL=ws://localhost:3000

# Public Environment Variables
PUBLIC_API_URL=http://localhost:3000/api
PUBLIC_SOCKET_URL=http://localhost:3000
PUBLIC_APP_NAME=BarberPro
PUBLIC_APP_VERSION=1.0.0

# Argentina Configuration
PUBLIC_TIMEZONE=America/Argentina/Buenos_Aires
VITE_TIMEZONE=America/Argentina/Buenos_Aires
PUBLIC_LOCALE=es-AR
VITE_LOCALE=es-AR
PUBLIC_CURRENCY=ARS
VITE_CURRENCY=ARS

# Feature Flags
PUBLIC_ENABLE_SOCIAL_LOGIN=true
PUBLIC_ENABLE_WHATSAPP_SUPPORT=true
PUBLIC_ENABLE_SMS_NOTIFICATIONS=true
PUBLIC_ENABLE_EMAIL_NOTIFICATIONS=true

# Support Information
PUBLIC_SUPPORT_WHATSAPP=+5491112345678
PUBLIC_SUPPORT_EMAIL=soporte@barberpro.local
PUBLIC_SUPPORT_PHONE=+54 11 1234-5678

# MercadoPago Public Key (dummy for development)
VITE_MERCADOPAGO_PUBLIC_KEY=TEST-dummy-public-key-for-development
PUBLIC_MERCADOPAGO_PUBLIC_KEY=TEST-dummy-public-key-for-development
EOF
    echo -e "${GREEN}[${CHECK}]${RESET} Created frontend/.env"
else
    echo -e "${YELLOW}[!]${RESET} frontend/.env already exists, skipping..."
fi

# ============================================================================
# DOCKER .ENV
# ============================================================================
if [ ! -f docker/.env ]; then
    echo -e "${CYAN}[${ARROW}]${RESET} Creating docker/.env file..."
    cat > docker/.env << 'EOF'
# Docker Environment Configuration
# Auto-generated by scripts/generate-env.sh

# Database
POSTGRES_DB=barberpro_dev
POSTGRES_USER=barberpro
POSTGRES_PASSWORD=barberpro_dev_password
POSTGRES_PORT=5432

# Redis
REDIS_PORT=6379

# Admin Tools
PGADMIN_DEFAULT_EMAIL=admin@barberpro.com
PGADMIN_DEFAULT_PASSWORD=admin
PGADMIN_PORT=8080
REDIS_COMMANDER_USER=admin
REDIS_COMMANDER_PASSWORD=admin
REDIS_COMMANDER_PORT=8081

# Backend
BACKEND_PORT=3000

# Frontend
FRONTEND_PORT=5173
EOF
    echo -e "${GREEN}[${CHECK}]${RESET} Created docker/.env"
else
    echo -e "${YELLOW}[!]${RESET} docker/.env already exists, skipping..."
fi

echo ""
echo -e "${GREEN}[${CHECK}]${RESET} .env file generation complete!"
echo ""
echo -e "${CYAN}Files created:${RESET}"
echo "  - .env (root)"
echo "  - backend/.env"
echo "  - frontend/.env"
echo "  - docker/.env"
echo ""
echo -e "${YELLOW}Note:${RESET} These are dummy values for local development only."
echo -e "${YELLOW}      Never commit real credentials to version control!${RESET}"
echo ""
